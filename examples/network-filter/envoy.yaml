admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901

static_resources:
  listeners:
  - name: ingress
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
    - filters:
      - name: envoy.filters.network.wasm
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.wasm.v2.Wasm
          config:
            configuration: 'config for network-filter'
            name: "envoy-sdk-samples"
            root_id: "network-filter"
            vm_config:
              vm_id: "vm-with-network-filter"
              runtime: "envoy.wasm.runtime.v8"
              code:
                local:
                  filename: /etc/envoy/network_filter.wasm
      - name: envoy.tcp_proxy
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy
          stat_prefix: ingress
          cluster: mock_service

  - name: mock
    address:
      socket_address:
        address: 127.0.0.1
        port_value: 10001
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: mock
          route_config:
            name: local_route
            virtual_hosts:
            - name: mock
              domains:
              - "*"
              routes:
              - match:
                  prefix: "/"
                direct_response:
                  status: 200
                  body:
                    inline_string: "Hi from mock service!\n"
          http_filters:
          - name: envoy.router
            config: {}

  clusters:
  - name: mock_service
    connect_timeout: 0.25s
    type: static
    lb_policy: round_robin
    hosts:
    - socket_address:
        address: 127.0.0.1
        port_value: 10001
