(function() {var implementors = {};
implementors["access_logger"] = [{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"access_logger/struct.SampleAccessLogger.html\" title=\"struct access_logger::SampleAccessLogger\">SampleAccessLogger</a>&lt;'a&gt;","synthetic":true,"types":["access_logger::logger::SampleAccessLogger"]}];
implementors["envoy_sdk"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"envoy_sdk/host/struct.HttpClientRequestHandle.html\" title=\"struct envoy_sdk::host::HttpClientRequestHandle\">HttpRequestHandle</a>","synthetic":true,"types":["envoy_sdk::abi::proxy_wasm::types::HttpRequestHandle"]},{"text":"impl !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"envoy_sdk/extension/struct.Module.html\" title=\"struct envoy_sdk::extension::Module\">Module</a>","synthetic":true,"types":["envoy_sdk::extension::module::config::Module"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"envoy_sdk/extension/struct.InstanceId.html\" title=\"struct envoy_sdk::extension::InstanceId\">InstanceId</a>","synthetic":true,"types":["envoy_sdk::extension::InstanceId"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"enum\" href=\"envoy_sdk/extension/factory/enum.ConfigStatus.html\" title=\"enum envoy_sdk::extension::factory::ConfigStatus\">ConfigStatus</a>","synthetic":true,"types":["envoy_sdk::extension::factory::ConfigStatus"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"enum\" href=\"envoy_sdk/extension/factory/enum.DrainStatus.html\" title=\"enum envoy_sdk::extension::factory::DrainStatus\">DrainStatus</a>","synthetic":true,"types":["envoy_sdk::extension::factory::DrainStatus"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"enum\" href=\"envoy_sdk/extension/filter/http/enum.FilterHeadersStatus.html\" title=\"enum envoy_sdk::extension::filter::http::FilterHeadersStatus\">FilterHeadersStatus</a>","synthetic":true,"types":["envoy_sdk::extension::filter::http::FilterHeadersStatus"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"enum\" href=\"envoy_sdk/extension/filter/network/enum.FilterStatus.html\" title=\"enum envoy_sdk::extension::filter::network::FilterStatus\">FilterStatus</a>","synthetic":true,"types":["envoy_sdk::extension::filter::network::FilterStatus"]}];
implementors["http_filter"] = [{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"http_filter/struct.SampleHttpFilterFactory.html\" title=\"struct http_filter::SampleHttpFilterFactory\">SampleHttpFilterFactory</a>&lt;'a&gt;","synthetic":true,"types":["http_filter::factory::SampleHttpFilterFactory"]}];
implementors["network_filter"] = [{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.RefUnwindSafe.html\" title=\"trait std::panic::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"network_filter/struct.SampleNetworkFilterFactory.html\" title=\"struct network_filter::SampleNetworkFilterFactory\">SampleNetworkFilterFactory</a>&lt;'a&gt;","synthetic":true,"types":["network_filter::factory::SampleNetworkFilterFactory"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()